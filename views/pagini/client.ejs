<!DOCTYPE html>
<html lang="ro">

<head>
    <%- include("../fragmente/head.ejs") %>
        <title>Client</title>
        <script src="/resources/peerjs.min.js"></script>
        <script src="/socket.io/socket.io.js"></script>
</head>

<body>
    <div id="videoDiv">
    </div>
</body>

<script>
    let users_joined = 0;
    const socket = io('/');
    const peer = new Peer();
    let myVideoStream;
    let myId;
    var videoGrid = document.getElementById('videoDiv')
    var myvideo = document.createElement('video');
    myvideo.muted = true;
    const peerConnections = {}
    navigator.mediaDevices.getUserMedia({
        video: true,
        audio: true
    }).then((stream) => {
        myVideoStream = stream;
        addVideo(myvideo, stream);
        peer.on('call', call => {
            call.answer(stream);
            const vid = document.createElement('video');
            call.on('stream', userStream => {
                addVideo(vid, userStream);
            })
            call.on('error', (err) => {
                alert(err)
            })
            call.on("close", () => {
                console.log(vid);
                vid.remove();
            })
            peerConnections[call.peer] = call;
        })
    }).catch(err => {
        alert(err.message)
    })
    peer.on('open', (id) => {
        myId = id;
        socket.emit("newUser", id, "asd");
    })
    peer.on('error', (err) => {
        alert(err.type);
    });
    socket.on('userJoined', id => {
        console.log("new user joined")
        users_joined += 1
        const call = peer.call(id, myVideoStream);
        const vid = document.createElement('video');
        call.on('error', (err) => {
            alert(err);
        })
        call.on('stream', userStream => {
            addVideo(vid, userStream);
        })
        call.on('close', () => {
            vid.remove();
            console.log("user disconect")
        })
        peerConnections[id] = call;
    })
    socket.on('userDisconnect', id => {
        users_joined = users_joined - 1
        if (peerConnections[id]) {
            peerConnections[id].close();
        }
    })
    function addVideo(video, stream) {
        video.srcObject = stream;
        video.addEventListener('loadedmetadata', () => {
            video.play()
        })
        videoGrid.append(video);
    }
    function handler() {
        if (document.getElementsByTagName("video").length == 1) {
            window.location.reload();
        }
    }
    setInterval(handler, 30000)
</script>

</html>